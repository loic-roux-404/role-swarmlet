---
# possible : forcereinstall | present | absent
swarmlet_state: present
swarmlet_install_command_map:
  present: ''
  absent: uninstall-swarmlet
  forcereinstall: reinstall-swarmlet
# Installation directory
swarmlet_location: /usr/local/lib/swarm
swarmlet_location_source: "{{ swarmlet_location }}/source"
swarmlet_ssh_dir: "{{ swarmlet_location }}/.ssh"
swarmlet_ssh_deploy_key: "{{ swarmlet_location }}/id_ssh_rsa_swarmlet"
# Git
swarmlet_repo: swarmlet/swarmlet
swarmlet_version: master
# Used for authentication with the registry and web services / dashboards
swarmlet_user: "{{ ansible_user_id }}"
# Used for authentication with the registry and web services / dashboards
swarmlet_login_user: swarmlet-user
swarmlet_password: swarmlet
swarmlet_ssh_authorized_keys: []
swarmlet_ssh_authorized_keys_file: "{{ swarmlet_ssh_dir }}/authorized_keys_swarmlet"
swarmlet_ssh_deploy_key_export_github_repo: [] #TODO
swarmlet_ssh_deploy_key_export_github_org: [] #TODO
# Docker Swarm node name
swarmlet_node_hostname: master-0
# Domain used by traefik
swarmlet_domain: "{{ hostvars[inventory_hostname].ansible_host }}"
swarmlet_email: "mail@{{ swarmlet_domain }}"
# More Memory
swarmlet_create_swap: 'false'
# Options: matomo|swarmpit|swarmprom|portainer
# Seperate by space and wrap in quotes to install multiple modules
swarmlet_modules: "portainer"
# Options: production|staging
swarmlet_ca_env: production
# Swarmlet final options
swarmlet_options:
  INSTALLATION_TYPE: "noninteractive"
  SWARMLET_INSTALL_ROOT: "{{ swarmlet_location_source }}"
  INSTALL_BRANCH: "{{ swarmlet_version }}"
  INSTALL_FROM: git
  SWARMLET_USERNAME: "{{ swarmlet_login_user }}"
  SWARMLET_PASSWORD: "{{ swarmlet_password }}"
  # The authorized SSH keys for git deployments
  SSH_AUTHORIZED_KEYS: "{{ swarmlet_ssh_authorized_keys_file }}"
  # Optional: set a new hostname
  NEW_HOSTNAME: "{{ swarmlet_node_hostname }}"
  ROOT_DOMAIN: "{{ swarmlet_domain }}"
  CREATE_SWAP: "{{ swarmlet_create_swap }}"
  INSTALL_MODULES: "{{ swarmlet_modules }}"
  CA_SERVER: "{{ swarmlet_ca_env }}"

swarmlet_env:
  INSTALLLATION_TYPE: "noninteractive"
  EMAIL: "{{ swarmlet_email }}"
  # CONSUL_REPLICAS=0
  TRAEFIK_REPLICAS: 1

# Mutations
swarmlet_all_secret: swarmlet-user-secrets
swarmlet_all_secret_data: "{{ swarmlet_password }}"
swarmlet_update_secrets_all_enable: false
swarmlet_all_secret_obj:
  secret_name: "{{ swarmlet_all_secret }}"
  data: "{{ swarmlet_all_secret_data }}"
swarmlet_update_secrets_all: [
  "{{ swarmlet_all_secret_obj | combine({ 'stack': 'deployer' }) }}",
  "{{ swarmlet_all_secret_obj | combine({ 'stack': 'portainer' }) }}",
  "{{ swarmlet_all_secret_obj | combine({ 'stack': 'swarmprom' }) }}",
  "{{ swarmlet_all_secret_obj | combine({ 'stack': 'registry' }) }}"
]
# Example usage
# [ { stack: 'swarmprom', secret_name: 'swarmlet-user-secrets', data: 'swarmlet' } ]
swarmlet_update_secrets: []
_swarmlet_update_secrets: "{{ swarmlet_update_secrets +
  swarmlet_update_secrets_all if swarmlet_update_secrets_all_enable or [] }}"
